services:
  kafka-ui:
    image: kafbat/kafka-ui:main
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
      KAFKA_CLUSTERS_0_NAME: multi
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092,kafka-2:9092
    depends_on:
      kafka:
        condition: service_healthy
      kafka-2:
        condition: service_healthy
    networks:
      - kafka-multi-net

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9093:9094"
    environment:
      # KRaft settings
      - KAFKA_CLUSTER_ID=CIM7P28aS2Gir_UH03IRNg
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093,2@kafka-2:9095
      # Listeners
      - KAFKA_CFG_LISTENERS=CONTROLLER://:9093,BROKER://:9092,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=BROKER://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,BROKER:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=BROKER
      # Replication factors
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=2
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=2
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
    healthcheck:
      test: /opt/bitnami/kafka/bin/kafka-broker-api-versions.sh --bootstrap-server localhost:9094
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kafka-multi-net

  kafka-2:
    image: bitnami/kafka:latest
    ports:
      - "9096:9094"
    environment:
      # KRaft settings
      - KAFKA_CLUSTER_ID=CIM7P28aS2Gir_UH03IRNg
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093,2@kafka-2:9095
      # Listeners
      - KAFKA_CFG_LISTENERS=CONTROLLER://:9095,BROKER://:9092,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=BROKER://kafka-2:9092,EXTERNAL://localhost:9096
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,BROKER:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=BROKER
      # Replication factors
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=2
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=2
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
    healthcheck:
      test: /opt/bitnami/kafka/bin/kafka-broker-api-versions.sh --bootstrap-server localhost:9094
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kafka-multi-net

  topic-init:
    image: bitnami/kafka:latest
    depends_on:
      kafka:
        condition: service_healthy
      kafka-2:
        condition: service_healthy
    command: >
      /bin/bash -c "
      /opt/bitnami/kafka/bin/kafka-topics.sh --create --topic test-1p-rf1 --bootstrap-server kafka:9092,kafka-2:9092 --partitions 1 --replication-factor 1 --if-not-exists || true &&
      /opt/bitnami/kafka/bin/kafka-topics.sh --create --topic test-2p-rf1 --bootstrap-server kafka:9092,kafka-2:9092 --partitions 2 --replication-factor 1 --if-not-exists || true &&
      /opt/bitnami/kafka/bin/kafka-topics.sh --create --topic test-2p-rf2 --bootstrap-server kafka:9092,kafka-2:9092 --partitions 2 --replication-factor 2 --if-not-exists || true
      "
    networks:
      - kafka-multi-net

networks:
  kafka-multi-net:
    driver: bridge
